---
- name: Create a directory for ansible to transfer files
  ansible.builtin.file:
    path: "{{ ansible_transfer_dir }}"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Copy nginx package to remote
  ansible.builtin.copy:
    src: "{{ local_nginx_pkg_path }}"
    dest: "{{ ansible_transfer_dir }}"
    owner: root
    group: root
    mode: '0755'

- name: Uncompress nginx package
  ansible.builtin.unarchive:
    remote_src: true
    src: "{{ ansible_transfer_dir }}/{{ nginx_pkg_name }}"
    dest: "{{ ansible_transfer_dir }}/"
    owner: root
    group: root
    mode: '0755'

- name: Find all rpm files in "{{ remote_nginx_uncompressed_dir }}" folder
  ansible.builtin.find:
    paths: "{{ remote_nginx_uncompressed_dir }}"
    patterns: "*.rpm"
  register: rpm_files

- name: Set host variable rpm_list
  ansible.builtin.set_fact:
    rpm_list: "{{ rpm_files.files | map(attribute='path') | list }}"

- name: Install nginx
  ansible.builtin.yum:
    name: "{{ rpm_list }}"
    state: present

- name: Check if firewalld was running
  ansible.builtin.command: firewall-cmd --state
  register: firewalld_status
  ignore_errors: true

- name: Copy nginx config file
  ansible.builtin.copy:
    src: files/nginx/centos7/nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: '0644'
    backup: true

- name: Copy minio nginx config file
  ansible.builtin.template:
    src: templates/minio.conf.j2
    dest: /etc/nginx/conf.d/minio.conf
    owner: root
    group: root
    mode: '0644'

- name: Restart nginx and enable start on boot
  ansible.builtin.systemd:
    name: nginx
    state: restarted
    enabled: true

- name: Wait for ports to become open on the host, don't start checking for 5 seconds
  ansible.builtin.wait_for:
    port: "{{ item }}"
    host: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
    state: started
    delay: 5
    timeout: 30
  with_items:
    - 80

- name: "Clean remote temporary directory"
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ remote_nginx_uncompressed_dir }}"
