---
- name: Add '# doris fe' to /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    insertafter: EOF
    line: '# doris fe'
    backup: true

- name: Add all doris fe to /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    insertafter: EOF
    line: "{{ hostvars[item]['ansible_host'] }}    {{ item }}"
  with_items:
    - "{{ groups['doris_fe'] }}"

- name: Create a directory for ansible to transfer files
  ansible.builtin.file:
    path: "{{ ansible_transfer_dir }}"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: "Copy mysql client package to remote {{ ansible_transfer_dir }} directory"
  ansible.builtin.copy:
    src: "{{ local_mysql_client_pkg_path }}"
    dest: "{{ ansible_transfer_dir }}/"
    owner: root
    group: root
    mode: '0755'

- name: Uncompress mysql client package
  ansible.builtin.unarchive:
    remote_src: true
    src: "{{ ansible_transfer_dir }}/{{ mysql_client_pkg_name }}"
    dest: "{{ ansible_transfer_dir }}"
    owner: root
    group: root
    mode: '0755'

- name: "Find all rpm package in {{ remote_mysql_client_pkg_uncompressed_dir }} directory"
  ansible.builtin.find:
    paths: "{{ remote_mysql_client_pkg_uncompressed_dir }}"
    patterns: "*.rpm"
  register: rpm_files

- name: Set host variable rpm_list
  ansible.builtin.set_fact:
    rpm_list: "{{ rpm_files.files | map(attribute='path') | list }}"

- name: Install mysql client
  ansible.builtin.yum:
    name: "{{ rpm_list }}"
    state: present

- name: "Create system user {{ doris_system_user }}"
  ansible.builtin.user:
    name: "{{ doris_system_user }}"
    password: "{{ doris_system_password | password_hash('sha512', 'salt') }}"
    shell: /bin/bash

- name: "Create Doris deploy directory {{ doris_deploy_dir }}"
  ansible.builtin.file:
    path: "{{ doris_deploy_dir }}"
    state: directory
    owner: "{{ doris_system_user }}"
    group: "{{ doris_system_user }}"
    mode: '0755'

- name: Copy Doris package to remote
  ansible.builtin.copy:
    src: "{{ local_doris_pkg_path }}"
    dest: "{{ ansible_transfer_dir }}"
    owner: root
    group: root
    mode: '0755'

- name: Uncompress Doris package
  ansible.builtin.unarchive:
    remote_src: true
    src: "{{ ansible_transfer_dir }}/{{ doris_pkg_name }}"
    dest: "{{ ansible_transfer_dir }}/"
    owner: root
    group: root
    mode: '0755'

- name: "Copy Doris FE deployment file to {{ doris_deploy_dir }}"
  ansible.builtin.copy:
    remote_src: true
    src: "{{ item }}"
    dest: "{{ doris_deploy_dir }}"
    owner: "{{ doris_system_user }}"
    group: "{{ doris_system_user }}"
    mode: '0755'
  with_items:
    - "{{ remote_doris_pkg_uncompressed_dir }}/fe"
    - "{{ remote_doris_pkg_uncompressed_dir }}/extensions"

- name: "Clean remote temporary directory"
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ remote_mysql_client_pkg_uncompressed_dir }}"
    - "{{ remote_doris_pkg_uncompressed_dir }}"

- name: "Create Doris FE metadata directory {{ doris_fe_metadata_dir }}"
  ansible.builtin.file:
    path: "{{ doris_fe_metadata_dir }}"
    state: directory
    owner: "{{ doris_system_user }}"
    group: "{{ doris_system_user }}"
    mode: '0755'

- name: Change Doris FE configurations
  ansible.builtin.blockinfile:
    path: "{{ doris_fe_config }}"
    block: |
      JAVA_HOME = {{ java_home }}
      priority_networks = {{ hostvars[inventory_hostname]['ansible_host'] }}/{{ cidr_prefix_length }}
      meta_dir = {{ doris_fe_metadata_dir }}
      enable_ssl = false
      enable_feature_binlog = true
      max_dynamic_partition_num = {{ doris_fe_max_dynamic_partition_num }}
      fe_thrift_max_pkg_bytes = {{ doris_fe_fe_thrift_max_pkg_bytes }}
    backup: true

- name: Start Doris FE on fe-1 node
  ansible.builtin.shell: |
    cd {{ doris_deploy_dir }}/fe/
    bin/start_fe.sh --daemon
  become: true
  become_user: "{{ doris_system_user }}"
  when: inventory_hostname == "fe-1"
  changed_when: true

- name: Wait for ports to become open on the host, don't start checking for 30 seconds
  ansible.builtin.wait_for:
    port: "{{ item }}"
    host: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
    state: started
    delay: 30
    timeout: 90
  with_items:
    - 8030
    - 9020
    - 9030
    - 9010
  when: inventory_hostname == "fe-1"

- name: Specify the Master(fe-1) on all the rest Follower at first startup
  ansible.builtin.shell: |
    cd {{ doris_deploy_dir }}/fe/
    bin/start_fe.sh --helper {{ hostvars['fe-1']['ansible_host'] }}:9010 --daemon
  become: true
  become_user: "{{ doris_system_user }}"
  when:
    - groups['doris_fe'] | length > 1
    - inventory_hostname != "fe-1"
  changed_when: true

- name: Set host variable rest_follower_list
  ansible.builtin.set_fact:
    rest_follower_list: "{{ groups['doris_fe'] | reject('search', 'fe-1') | list }}"
  when:
    - groups['doris_fe'] | length > 1
    - inventory_hostname == "fe-1"

- name: Copy add-fe-follower.sh to fe-1 node
  ansible.builtin.template:
    src: templates/add-fe-follower.sh.j2
    dest: "{{ ansible_transfer_dir }}/add-fe-follower.sh"
    owner: root
    group: root
    mode: '0744'
  when:
    - groups['doris_fe'] | length > 1
    - inventory_hostname == "fe-1"

- name: Add all the rest Follower to the cluster on fe-1 ndoe
  ansible.builtin.command: "/usr/bin/sh {{ ansible_transfer_dir }}/add-fe-follower.sh"
  when:
    - groups['doris_fe'] | length > 1
    - inventory_hostname == "fe-1"
  changed_when: true

- name: Pause for 15 seconds
  ansible.builtin.pause:
    seconds: 15
  when:
    - groups['doris_fe'] | length > 1

- name: Copy check-fe-join-status.sh to fe-1 node
  ansible.builtin.copy:
    src: "files/doris/check-fe-join-status.sh"
    dest: "{{ ansible_transfer_dir }}"
    owner: root
    group: root
    mode: '0744'
  when:
    - groups['doris_fe'] | length > 1
    - inventory_hostname == "fe-1"

- name: Check FE join status. If joining is successful, continue. If it fails, play will stop, then please troubleshoot manually
  ansible.builtin.command: "/usr/bin/sh {{ ansible_transfer_dir }}/check-fe-join-status.sh {{ hostvars[inventory_hostname]['ansible_host'] }}"
  delegate_to: fe-1
  register: fe_join_status
  failed_when: "'false' in fe_join_status.stdout"
  changed_when: false
  when:
    - groups['doris_fe'] | length > 1
    - inventory_hostname != "fe-1"

- name: Stop all Follower except fe-1 node
  ansible.builtin.shell: |
    cd {{ doris_deploy_dir }}/fe/
    bin/stop_fe.sh
  become: true
  become_user: "{{ doris_system_user }}"
  when:
    - groups['doris_fe'] | length > 1
    - inventory_hostname != "fe-1"
  changed_when: true

- name: Start all Follower except fe-1 node
  ansible.builtin.shell: |
    cd {{ doris_deploy_dir }}/fe/
    bin/start_fe.sh --daemon
  become: true
  become_user: "{{ doris_system_user }}"
  when:
    - groups['doris_fe'] | length > 1
    - inventory_hostname != "fe-1"
  changed_when: true

- name: Wait for ports to become open on the host, don't start checking for 30 seconds
  ansible.builtin.wait_for:
    port: "{{ item }}"
    host: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
    state: started
    delay: 30
    timeout: 90
  with_items:
    - 8030
    - 9020
    - 9030
    - 9010
  when:
    - groups['doris_fe'] | length > 1
    - inventory_hostname != "fe-1"

- name: Copy add-be.sh to fe-1 node
  ansible.builtin.template:
    src: templates/add-be.sh.j2
    dest: "{{ ansible_transfer_dir }}/add-be.sh"
    owner: root
    group: root
    mode: '0744'
  when: inventory_hostname == "fe-1"

- name: Add BE to FE
  ansible.builtin.command: "/usr/bin/sh {{ ansible_transfer_dir }}/add-be.sh"
  when: inventory_hostname == "fe-1"
  changed_when: true
